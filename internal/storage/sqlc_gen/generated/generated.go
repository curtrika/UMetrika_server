// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package generated

import (
	models "github.com/curtrika/UMetrika_server/internal/domain/models"
	sqlcgen "github.com/curtrika/UMetrika_server/internal/storage/sqlc_gen"
)

type ConverterImpl struct{}

func (c *ConverterImpl) DBToModel(source *sqlcgen.PsychologicalPerformance) (*models.PsychologicalPerformance, error) {
	var pModelsPsychologicalPerformance *models.PsychologicalPerformance
	if source != nil {
		var modelsPsychologicalPerformance models.PsychologicalPerformance
		modelsPsychologicalPerformance.ID = (*source).ID
		modelsPsychologicalPerformance.OwnerID = (*source).OwnerID
		modelsPsychologicalPerformance.PsychologicalTestID = sqlcgen.Int4ToInt((*source).PsychologicalTestID)
		modelsPsychologicalPerformance.StartedAt = sqlcgen.TimestamptzToTime((*source).StartedAt)
		pModelsPsychologicalPerformance = &modelsPsychologicalPerformance
	}
	return pModelsPsychologicalPerformance, nil
}
func (c *ConverterImpl) ModelToDB(source *models.PsychologicalPerformance) (*sqlcgen.PsychologicalPerformance, error) {
	var pStoragePsychologicalPerformance *sqlcgen.PsychologicalPerformance
	if source != nil {
		var storagePsychologicalPerformance sqlcgen.PsychologicalPerformance
		storagePsychologicalPerformance.ID = (*source).ID
		storagePsychologicalPerformance.OwnerID = (*source).OwnerID
		storagePsychologicalPerformance.PsychologicalTestID = sqlcgen.IntToInt4((*source).PsychologicalTestID)
		storagePsychologicalPerformance.StartedAt = sqlcgen.TimeToTimestamptz((*source).StartedAt)
		pStoragePsychologicalPerformance = &storagePsychologicalPerformance
	}
	return pStoragePsychologicalPerformance, nil
}
