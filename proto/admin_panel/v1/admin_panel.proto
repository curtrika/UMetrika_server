syntax = "proto3";

package admin_panel;

option go_package = "github.com/curtrika/UMetrika_server/pkg/proto/admin_panel/v1;v1";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

// AdminPanel is a service for managing school info, users, and psychological tests.
service AdminPanel {
  // Ping RPC
  rpc Ping (PingMessage) returns (PingMessage) {
    option (google.api.http) = {
      get: "/ping"
    };
  }

  // CreateDiscipline RPC
  rpc CreateDiscipline (CreateDisciplineRequest) returns (CreateDisciplineResponse) {
  option (google.api.http) = {
    post: "/discipline"
    body: "*"
  };
}

  // PsychologicalType RPCs
  rpc CreatePsychologicalType (CreatePsychologicalTypeRequest) returns (PsychologicalTypeResponse) {
    option (google.api.http) = {
      post: "/psychological-types"
      body: "*"
    };
  }
  rpc GetPsychologicalType (GetPsychologicalTypeRequest) returns (PsychologicalTypeResponse) {
    option (google.api.http) = {
      get: "/psychological-types/{id}"
    };
  }
  rpc ListPsychologicalTypes (ListPsychologicalTypesRequest) returns (ListPsychologicalTypesResponse) {
    option (google.api.http) = {
      get: "/psychological-types"
    };
  }

  // PsychologicalTest RPCs
  rpc CreatePsychologicalTest (CreatePsychologicalTestRequest) returns (PsychologicalTestResponse) {
    option (google.api.http) = {
      post: "/psychological-tests"
      body: "*"
    };
  }
  rpc GetPsychologicalTest (GetPsychologicalTestRequest) returns (PsychologicalTestResponse) {
    option (google.api.http) = {
      get: "/psychological-tests/{id}"
    };
  }
  rpc ListPsychologicalTests (ListPsychologicalTestsRequest) returns (ListPsychologicalTestsResponse) {
    option (google.api.http) = {
      get: "/psychological-tests"
    };
  }

  // Question RPCs
  rpc CreateQuestion (CreateQuestionRequest) returns (QuestionResponse) {
    option (google.api.http) = {
      post: "/questions"
      body: "*"
    };
  }
  rpc GetQuestion (GetQuestionRequest) returns (QuestionResponse) {
    option (google.api.http) = {
      get: "/questions/{id}"
    };
  }
  rpc ListQuestions (ListQuestionsRequest) returns (ListQuestionsResponse) {
    option (google.api.http) = {
      get: "/questions"
    };
  }

  // Answer RPCs
  rpc CreateAnswer (CreateAnswerRequest) returns (AnswerResponse) {
    option (google.api.http) = {
      post: "/answers"
      body: "*"
    };
  }
  rpc GetAnswer (GetAnswerRequest) returns (AnswerResponse) {
    option (google.api.http) = {
      get: "/answers/{id}"
    };
  }
  rpc ListAnswers (ListAnswersRequest) returns (ListAnswersResponse) {
    option (google.api.http) = {
      get: "/answers"
    };
  }

  // PsychologicalPerformance RPCs
  rpc CreatePsychologicalPerformance (CreatePsychologicalPerformanceRequest) returns (PsychologicalPerformanceResponse) {
    option (google.api.http) = {
      post: "/psychological-performances"
      body: "*"
    };
  }
  rpc GetPsychologicalPerformance (GetPsychologicalPerformanceRequest) returns (PsychologicalPerformanceResponse) {
    option (google.api.http) = {
      get: "/psychological-performances/{id}"
    };
  }
  rpc ListPsychologicalPerformances (ListPsychologicalPerformancesRequest) returns (ListPsychologicalPerformancesResponse) {
    option (google.api.http) = {
      get: "/psychological-performances"
    };
  }

  // User RPCs
  rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/admin/user"
      body: "*"
    };
  }

  rpc GetUser (GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/admin/user/{user_id}"
    };
  }
}

message PingMessage {
  int64 id = 1;
}

message CreateDisciplineRequest {
  string title = 1;
}

message CreateDisciplineResponse {
  Discipline discipline = 1;
  repeated Error errors = 2;
}

message Error {
  enum Code {
    UNDEFINED_ERROR = 0;
  }
}

message Discipline {
  string id = 1;
  string title = 2;
}

///////////////////////////////
// Models and Requests for Psychological System
///////////////////////////////

message PsychologicalType {
  string id = 1;
  string title = 2;
}

message CreatePsychologicalTypeRequest {
  string title = 1;
}

message GetPsychologicalTypeRequest {
  string id = 1;
}

message PsychologicalTypeResponse {
  PsychologicalType psychological_type = 1;
  repeated Error errors = 2;
}

message ListPsychologicalTypesRequest {}

message ListPsychologicalTypesResponse {
  repeated PsychologicalType psychological_types = 1;
  repeated Error errors = 2;
}

message PsychologicalTest {
  string id = 1;
  string title = 2;
  string first_question_id = 3;
  string type_id = 4;
  string owner_id = 5;
}

message CreatePsychologicalTestRequest {
  string title = 1;
  string first_question_id = 2;
  string type_id = 3;
  string owner_id = 4;
}

message GetPsychologicalTestRequest {
  string id = 1;
}

message PsychologicalTestResponse {
  PsychologicalTest psychological_test = 1;
  repeated Error errors = 2;
}

message ListPsychologicalTestsRequest {}

message ListPsychologicalTestsResponse {
  repeated PsychologicalTest psychological_tests = 1;
  repeated Error errors = 2;
}

message Question {
  string id = 1;
  string next_question_id = 2;
  int32 number = 3;
  string first_answer_id = 4;
  string title = 5;
}

message CreateQuestionRequest {
  string next_question_id = 1;
  int32 number = 2;
  string first_answer_id = 3;
  string title = 4;
}

message GetQuestionRequest {
  string id = 1;
}

message QuestionResponse {
  Question question = 1;
  repeated Error errors = 2;
}

message ListQuestionsRequest {}

message ListQuestionsResponse {
  repeated Question questions = 1;
  repeated Error errors = 2;
}

message Answer {
  string id = 1;
  string next_answer_id = 2;
  string title = 3;
}

message CreateAnswerRequest {
  string next_answer_id = 1;
  string title = 2;
}

message GetAnswerRequest {
  string id = 1;
}

message AnswerResponse {
  Answer answer = 1;
  repeated Error errors = 2;
}

message ListAnswersRequest {}

message ListAnswersResponse {
  repeated Answer answers = 1;
  repeated Error errors = 2;
}

message PsychologicalPerformance {
  string id = 1;
  string owner_id = 2;
  string psychological_test_id = 3;
  string started_at = 4; // Use ISO 8601 format (e.g., "2024-11-12T08:00:00Z")
}

message CreatePsychologicalPerformanceRequest {
  string owner_id = 1;
  string psychological_test_id = 2;
  string started_at = 3; // Use ISO 8601 format
}

message GetPsychologicalPerformanceRequest {
  string id = 1;
}

message PsychologicalPerformanceResponse {
  PsychologicalPerformance psychological_performance = 1;
  repeated Error errors = 2;
}

message ListPsychologicalPerformancesRequest {}

message ListPsychologicalPerformancesResponse {
  repeated PsychologicalPerformance psychological_performances = 1;
  repeated Error errors = 2;
}

message CreateUserRequest {
  User user = 10;
}

message CreateUserResponse {
  repeated Error errors = 1;
  User new_user = 10;
}

message GetUserRequest {
  string user_id = 10;
}

message GetUserResponse {
  repeated Error errors = 1;
  User user = 10;
}

// TODO: вынести отсюда
// MODELS
message User {
  string id = 1;
  string first_name = 2;
  string middle_name = 3;
  string last_name = 4;
  string email = 5;
  string password = 6;
  string pass_hash = 7; //TODO: говертер почему то ругается
  string role_title = 8;
  string school_id = 9;
  string classes_id = 10;
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
  google.protobuf.Timestamp deleted_at= 13;
}